create sequence bank_account_seq
    increment by 50;

create sequence campaign_seq
    increment by 50;

create sequence city_seq
    increment by 50;

create sequence company_seq
    increment by 50;

create sequence product_seq
    increment by 50;

create sequence seller_seq
    increment by 50;

create table city
(
    id         serial,
    area       integer not null,
    city_name  varchar(255),
    population integer not null,
    constraint city_pkey
        primary key (id)
);

create table company
(
    id   serial,
    name varchar(255),
    constraint company_pkey
        primary key (id)
);

create table bank_account
(
    id                 serial,
    balance            double precision not null,
    credit_card_number varchar(255),
    cvc                varchar(255),
    status             boolean          not null,
    company_id         integer,
    constraint bank_account_pkey
        primary key (id),
    constraint fkgm6p0ej8mhbakybacuneanald
        foreign key (company_id) references company
);

create table product
(
    id           serial,
    product_name varchar(255),
    seller_id    integer not null,
    constraint product_pkey
        primary key (id)
);

create table campaign
(
    id         serial,
    bid        double precision not null,
    fund       double precision not null,
    keywords   varchar(255),
    name       varchar(255),
    radius     integer          not null,
    status     boolean          not null,
    city_id    integer,
    product_id integer,
    constraint campaign_pkey
        primary key (id),
    constraint fkmd77wro8uqjwi4sk9b7cx34a5
        foreign key (city_id) references city,
    constraint fkt8ic0ay1670e4uopfcvgi63lv
        foreign key (product_id) references product
);

alter table campaign
    add constraint campaign_bid_check
        check (bid >= (0)::double precision);

alter table campaign
    add constraint campaign_fund_check
        check (fund >= (0)::double precision);

alter table campaign
    add constraint campaign_radius_check
        check (radius >= 1);

create table seller
(
    id          serial,
    bank_acc_id integer not null,
    company_id  integer not null,
    name        varchar(255),
    constraint seller_pkey
        primary key (id)
);

create function update_status() returns trigger
    language plpgsql
as
$$
begin
    if new.fund<new.bid then
    update campaign set status=false where id=new.id;
    return new;
    end if;
    return old;
end;
$$;

create trigger update_status_trigger
    after update
        of fund
    on campaign
    for each row
execute procedure update_status();


create function turn_on_campaign() returns trigger
    language plpgsql
as
$$
begin
    if new.fund>=new.bid then
    update campaign set status=true where id=new.id;
    return new;
    end if;
    return old;
end;
$$;

create trigger turn_on_campaign_trigger
    after update
        of fund
    on campaign
    for each row
execute procedure turn_on_campaign();

INSERT INTO company (name) VALUES ('ABC Corp'), ('XYZ Inc'),('TGB z o.o.');
INSERT INTO bank_account (credit_card_number, cvc, status, balance,company_id)
VALUES ('1234567812345678', '123', 'true', 1000.00,1),
       ('8765432187654321', '456', 'true', 500.00,2),
       ('1111222233334444', '789', 'true', 0.00,2);
select * from bank_account;

INSERT INTO seller (name, bank_acc_id, company_id)
VALUES ('John Doe', 1, 1),
       ('Jane Smith', 2, 2),
       ('Bob Johnson', 3, 1);
INSERT INTO product (product_name, seller_id) VALUES ('Product A', 1), ('Product B', 2), ('Product C', 3);
INSERT INTO city (city_name, population, area) VALUES ('New York', 8538000, 468.9), ('Los Angeles', 3976000, 502.7);
INSERT INTO campaign (name,keywords, bid, fund, status, radius, city_id, product_id)
VALUES ('Campaign 1','keyword1, keyword2', 10.00, 1000.00, true, 50, 1, 1),
       ('Campaign 2','keyword3, keyword4', 20.00, 2000.00, true, 100, 2, 2);
select * from campaign;
update campaign set fund=fund-bid where id =2;
select * from campaign;