create table bank_account
(
    id                 serial,
    credit_card_number varchar(16)    not null,
    cvc                varchar(3)     not null,
    status             boolean        not null,
    balance            numeric(10, 2) not null,
    constraint bank_account_pkey
        primary key (id)
);

create table company
(
    id              serial,
    name            varchar(255) not null,
    bank_account_id integer,
    constraint company_pkey
        primary key (id),
    constraint company_bank_account_id_key
        unique (bank_account_id),
    constraint company_bank_account_id_fkey
        foreign key (bank_account_id) references bank_account
);

create table seller
(
    id              serial,
    name            varchar(255) not null,
    bank_account_id integer      not null,
    company_id      integer      not null,
    constraint seller_pkey
        primary key (id),
    constraint seller_bank_account_id_fkey
        foreign key (bank_account_id) references bank_account,
    constraint seller_company_id_fkey
        foreign key (company_id) references company
);

create table product
(
    id        serial,
    name      varchar(255) not null,
    seller_id integer      not null,
    constraint product_pkey
        primary key (id),
    constraint product_seller_id_fkey
        foreign key (seller_id) references seller
);

create table city
(
    id         serial,
    name       varchar(255)   not null,
    population integer        not null,
    area       numeric(10, 2) not null,
    constraint city_pkey
        primary key (id)
);

create table campaign
(
    id         serial,
    keywords   varchar(255)         not null,
    bid        numeric(10, 2)       not null,
    fund       numeric(10, 2)       not null,
    status     boolean default true not null,
    radius     integer              not null,
    city_id    integer              not null,
    product_id integer              not null,
    name       varchar(255)         not null,
    constraint campaign_pkey
        primary key (id),
    constraint campaign_city_id_fkey
        foreign key (city_id) references city,
    constraint campaign_product_id_fkey
        foreign key (product_id) references product
);

create function update_status() returns trigger
    language plpgsql
as
$$
begin
    if new.fund=0 then
    update campaign set status=false where id=new.id;
    return new;
    end if;
    return old;
end;
$$;

create trigger update_status_trigger
    after update
        of fund
    on campaign
    for each row
execute procedure update_status();


INSERT INTO bank_account (credit_card_number, cvc, status, balance)
VALUES ('1234567812345678', '123', 'true', 1000.00),
       ('8765432187654321', '456', 'true', 500.00),
       ('1111222233334444', '789', 'true', 0.00);
select * from bank_account;
INSERT INTO company (name, bank_account_id) VALUES ('ABC Corp',1), ('XYZ Inc',2);
INSERT INTO seller (name, bank_account_id, company_id)
VALUES ('John Doe', 1, 1),
       ('Jane Smith', 2, 2),
       ('Bob Johnson', 3, 1);
INSERT INTO product (name, seller_id) VALUES ('Product A', 1), ('Product B', 2), ('Product C', 3);
INSERT INTO city (name, population, area) VALUES ('New York', 8538000, 468.9), ('Los Angeles', 3976000, 502.7);
INSERT INTO campaign (name,keywords, bid, fund, status, radius, city_id, product_id)
VALUES ('Campaign 1','keyword1, keyword2', 10.00, 1000.00, true, 50, 1, 1),
       ('Campaign 2','keyword3, keyword4', 20.00, 2000.00, true, 100, 2, 2);
